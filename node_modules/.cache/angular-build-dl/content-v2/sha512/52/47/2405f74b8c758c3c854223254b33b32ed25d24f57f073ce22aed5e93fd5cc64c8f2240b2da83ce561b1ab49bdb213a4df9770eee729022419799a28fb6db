{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/data.service.ts","./src/app/core/sorter.service.ts","./src/app/customers/customers-list/customers-list.component.ts","./src/app/customers/customers-list/customers-list.component.html","./src/app/customers/customers-list/filter-textbox.component.ts","./src/app/customers/customers.component.ts","./src/app/customers/customers.component.html","./src/app/customers/customers.module.ts","./src/app/shared/capitalize.pipe.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({ \n  selector: 'app-root',\n  template: `\n    <app-customers></app-customers>\n  `\n})\nexport class AppComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n  \n}","import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { CoreModule } from './core/core.module';\nimport { CustomersModule } from './customers/customers.module';\nimport { SharedModule } from  './shared/shared.module';\nimport { AppComponent }  from './app.component';\n\n@NgModule({\n  imports:      [ BrowserModule, CoreModule, CustomersModule, SharedModule ],\n  declarations: [ AppComponent ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { DataService } from './data.service';\nimport { SorterService } from './sorter.service';\n\n@NgModule({\n    imports: [  ],\n    providers: [ DataService, SorterService ]\n})\nexport class CoreModule { }","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { ICustomer, IOrder } from '../../app/shared/interfaces';\n\n@Injectable()\nexport class DataService {\n\n    baseUrl: string = 'assets/';\n    \n    constructor(private http: HttpClient) { }\n\n    getCustomers() : Observable<ICustomer[]> {\n        return this.http.get<ICustomer[]>(this.baseUrl + 'customers.json')\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n    \n    getCustomer(id: number) : Observable<ICustomer> {\n      return this.http.get<ICustomer[]>(this.baseUrl + 'customers.json')\n        .pipe(\n          map(customers => {\n            let customer = customers.filter((cust: ICustomer) => cust.id === id);\n            return (customer && customer.length) ? customer[0] : null;\n          }),\n          catchError(this.handleError)\n        )\n    }\n\n    getOrders(id: number) : Observable<IOrder[]> {\n      return this.http.get<IOrder[]>(this.baseUrl + 'orders.json')\n        .pipe(\n          map(orders => {\n            let custOrders = orders.filter((order: IOrder) => order.customerId === id);\n            return custOrders;\n          }),\n          catchError(this.handleError)\n        );\n    }\n\n\n    private handleError(error: any) {\n      console.error('server error:', error);\n      if (error.error instanceof Error) {\n          const errMessage = error.error.message;\n          return Observable.throw(errMessage);\n          // Use the following instead if using lite-server\n          // return Observable.throw(err.text() || 'backend server error');\n      }\n      return Observable.throw(error || 'Node.js server error');\n    }\n\n}","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SorterService {\n\n\tproperty: string = null;\n\tdirection: number = 1;\n\n    sort(collection: any[], prop: any) {\n        this.property = prop;\n        this.direction = (this.property === prop) ? this.direction * -1 : 1;\n\n        collection.sort((a: any,b: any) => {\n            let aVal: any;\n            let bVal: any;\n            \n            //Handle resolving complex properties such as 'state.name' for prop value\n            if (prop && prop.indexOf('.') > -1) {\n              aVal = this.resolveProperty(prop, a);\n              bVal = this.resolveProperty(prop, b);\n            }\n            else {            \n              aVal = a[prop];\n              bVal = b[prop];\n            }\n            \n            //Fix issues that spaces before/after string value can cause such as ' San Francisco'\n            if (this.isString(aVal)) aVal = aVal.trim().toUpperCase();\n            if (this.isString(bVal)) bVal = bVal.trim().toUpperCase();\n          \n            if(aVal === bVal){\n                return 0;\n            }\n            else if (aVal > bVal){\n                return this.direction * -1;\n            }\n            else {\n                return this.direction * 1;\n            }\n        });\n    }\n    \n    isString(val: any) : boolean {\n      return (val && (typeof val === 'string' || val instanceof String));\n    }\n\n    resolveProperty(path: string, obj: any) {\n      return path.split('.').reduce(function(prev, curr) {\n          return (prev ? prev[curr] : undefined)\n      }, obj || self)\n    }\n\n}","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ICustomer } from '../../shared/interfaces';\n\n@Component({\n    selector: 'app-customers-list',\n    templateUrl: './customers-list.component.html'\n})\nexport class CustomersListComponent implements OnInit {\n    private _customers: ICustomer[] = [];\n    @Input() get customers(): ICustomer[] {\n        return this._customers;\n    }\n    \n    set customers(value: ICustomer[]) {\n        if (value) {\n            this.filteredCustomers = this._customers = value;\n            this.calculateOrders();\n        }\n    }\n\n    filteredCustomers: any[] = [];\n    customersOrderTotal: number;\n    currencyCode: string = 'USD';\n    \n    constructor() {}\n    \n    ngOnInit() {\n\n    }\n    \n    calculateOrders() {\n        this.customersOrderTotal = 0;\n        this.filteredCustomers.forEach((cust: ICustomer) => {\n            this.customersOrderTotal += cust.orderTotal;\n        });\n    }\n    \n    filter(data: string) {\n        if (data) {\n            this.filteredCustomers = this.customers.filter((cust: ICustomer) => {\n                return cust.name.toLowerCase().indexOf(data.toLowerCase()) > -1 ||\n                       cust.city.toLowerCase().indexOf(data.toLowerCase()) > -1 ||\n                       cust.orderTotal.toString().indexOf(data) > -1;\n            });\n            \n        } else {\n            this.filteredCustomers = this.customers;\n        }\n        this.calculateOrders();\n    }\n    \n    sort(prop: string) {\n        // A sorter service will handle the sorting\n    }\n}","<filter-textbox (changed)=\"filter($event)\"></filter-textbox>\n<br />\n<br />\n<table class=\"table table-hover\">\n    <thead>\n        <tr>\n            <th (click)=\"sort('name')\">Name</th>\n            <th (click)=\"sort('city')\">City</th>\n            <th (click)=\"sort('orderTotal')\">Order Total</th>\n        </tr>\n    </thead>\n    <tr *ngFor=\"let cust of filteredCustomers\">\n        <td>\n            <a>\n                {{ cust.name | capitalize }}\n            </a>\n        </td>\n        <td>{{ cust.city }}</td>\n        <td>{{ cust.orderTotal | currency:currencyCode:'symbol' }}</td>\n    </tr>\n    <tr *ngIf=\"filteredCustomers && filteredCustomers.length\">\n        <td colspan=\"2\">&nbsp;</td>\n        <td>\n            {{ customersOrderTotal | currency:currencyCode:'symbol'  }}\n        </td>\n    </tr>\n    <tr *ngIf=\"!filteredCustomers || !filteredCustomers.length\">\n        <td colspan=\"4\">No customers found</td>\n    </tr>\n</table>\nNumber of Customers: {{ filteredCustomers.length }}\n<br />","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'filter-textbox',\n    template: `\n        Filter: <input type=\"text\" [(ngModel)]=\"filter\" />\n    `\n})\nexport class FilterTextboxComponent implements OnInit {\n    \n    private _filter: string;\n    @Input() get filter() {\n        return this._filter;\n    }\n    \n    set filter(val: string) { \n        this._filter = val;\n        this.changed.emit(this.filter); //Raise changed event\n    }\n\n    @Output() changed: EventEmitter<string> = new EventEmitter<string>();\n    \n    \n    constructor() {}\n    \n    ngOnInit() {\n        \n    }\n}","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../core/data.service';\nimport { ICustomer } from '../shared/interfaces';\n\n@Component({\n    selector: 'app-customers',\n    templateUrl: './customers.component.html'\n})\nexport class CustomersComponent implements OnInit {\n    title: string;\n    people: any[];\n    \n    constructor(private dataService: DataService) {}\n    \n    ngOnInit() {\n        this.title = 'Customers';\n        this.dataService.getCustomers()\n            .subscribe((customers: ICustomer[]) => this.people = customers);\n    //    this.people = [\n    //      { id: 1, name: 'john Doe', city: 'Phoenix', orderTotal: 9.99, customerSince: new Date(2014, 7, 10) },\n    //       { id: 2, name: 'Jane Doe', city: 'Chandler', orderTotal: 19.99, customerSince: new Date(2017, 2, 22)},\n    //       { id: 3, name: 'Michelle Thomas', city: 'Seattle', orderTotal: 99.99, customerSince: new Date(2002, 10, 31)},\n    //       { id: 4, name: 'Jim Thomas', city: 'New York', orderTotal: 599.99, customerSince: new Date(2002, 10, 31)},\n    //   ];\n    }\n}","<h1>{{ title }}</h1>\n<br />\n<app-customers-list [customers]=\"people\"></app-customers-list>\n","import { NgModule }      from '@angular/core';\nimport { FormsModule }      from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { CustomersComponent }  from './customers.component';\nimport { CustomersListComponent } from './customers-list/customers-list.component';\nimport { FilterTextboxComponent } from './customers-list/filter-textbox.component';\n\n@NgModule({\n  imports:      [ CommonModule, SharedModule, FormsModule ],\n  declarations: [ CustomersComponent, CustomersListComponent, FilterTextboxComponent ],\n  exports: [ CustomersComponent ]\n})\nexport class CustomersModule { }","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'capitalize' })\nexport class CapitalizePipe implements PipeTransform {\n    transform(value: any) {\n        if (value) {\n            return value.charAt(0).toUpperCase() + value.slice(1);\n        }\n        return value;\n    }\n}","import { NgModule } from '@angular/core';\n\nimport { CapitalizePipe } from './capitalize.pipe';\n\n@NgModule({\n    declarations: [ CapitalizePipe ],\n    exports: [ CapitalizePipe ]\n})\nexport class SharedModule { }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}