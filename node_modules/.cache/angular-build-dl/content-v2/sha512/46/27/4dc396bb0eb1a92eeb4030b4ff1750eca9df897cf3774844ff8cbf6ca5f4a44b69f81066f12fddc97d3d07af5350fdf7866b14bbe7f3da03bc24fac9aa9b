{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/data.service.ts","webpack:///src/app/core/sorter.service.ts","webpack:///src/app/customers/customers-list/customers-list.component.ts","webpack:///src/app/customers/customers-list/customers-list.component.html","webpack:///src/app/customers/customers-list/filter-textbox.component.ts","webpack:///src/app/customers/customers.component.ts","webpack:///src/app/customers/customers.component.html","webpack:///src/app/customers/customers.module.ts","webpack:///src/app/shared/capitalize.pipe.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","template","AppModule","imports","declarations","bootstrap","CoreModule","providers","DataService","http","baseUrl","get","pipe","handleError","customers","customer","filter","cust","length","orders","custOrders","order","customerId","error","console","errMessage","message","SorterService","property","direction","collection","prop","sort","a","b","aVal","bVal","indexOf","resolveProperty","isString","trim","toUpperCase","val","String","path","obj","split","reduce","prev","curr","undefined","self","CustomersListComponent","_customers","filteredCustomers","currencyCode","customersOrderTotal","forEach","orderTotal","data","name","toLowerCase","city","toString","calculateOrders","value","templateUrl","FilterTextboxComponent","changed","_filter","emit","CustomersComponent","dataService","title","getCustomers","subscribe","people","CustomersModule","CapitalizePipe","charAt","slice","SharedModule","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({ \n  selector: 'app-root',\n  template: `\n    <app-customers></app-customers>\n  `\n})\nexport class AppComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n  \n}","import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { CoreModule } from './core/core.module';\nimport { CustomersModule } from './customers/customers.module';\nimport { SharedModule } from  './shared/shared.module';\nimport { AppComponent }  from './app.component';\n\n@NgModule({\n  imports:      [ BrowserModule, CoreModule, CustomersModule, SharedModule ],\n  declarations: [ AppComponent ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { DataService } from './data.service';\nimport { SorterService } from './sorter.service';\n\n@NgModule({\n    imports: [  ],\n    providers: [ DataService, SorterService ]\n})\nexport class CoreModule { }","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { ICustomer, IOrder } from '../../app/shared/interfaces';\n\n@Injectable()\nexport class DataService {\n\n    baseUrl: string = 'assets/';\n    \n    constructor(private http: HttpClient) { }\n\n    getCustomers() : Observable<ICustomer[]> {\n        return this.http.get<ICustomer[]>(this.baseUrl + 'customers.json')\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n    \n    getCustomer(id: number) : Observable<ICustomer> {\n      return this.http.get<ICustomer[]>(this.baseUrl + 'customers.json')\n        .pipe(\n          map(customers => {\n            let customer = customers.filter((cust: ICustomer) => cust.id === id);\n            return (customer && customer.length) ? customer[0] : null;\n          }),\n          catchError(this.handleError)\n        )\n    }\n\n    getOrders(id: number) : Observable<IOrder[]> {\n      return this.http.get<IOrder[]>(this.baseUrl + 'orders.json')\n        .pipe(\n          map(orders => {\n            let custOrders = orders.filter((order: IOrder) => order.customerId === id);\n            return custOrders;\n          }),\n          catchError(this.handleError)\n        );\n    }\n\n\n    private handleError(error: any) {\n      console.error('server error:', error);\n      if (error.error instanceof Error) {\n          const errMessage = error.error.message;\n          return Observable.throw(errMessage);\n          // Use the following instead if using lite-server\n          // return Observable.throw(err.text() || 'backend server error');\n      }\n      return Observable.throw(error || 'Node.js server error');\n    }\n\n}","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SorterService {\n\n\tproperty: string = null;\n\tdirection: number = 1;\n\n    sort(collection: any[], prop: any) {\n        this.property = prop;\n        this.direction = (this.property === prop) ? this.direction * -1 : 1;\n\n        collection.sort((a: any,b: any) => {\n            let aVal: any;\n            let bVal: any;\n            \n            //Handle resolving complex properties such as 'state.name' for prop value\n            if (prop && prop.indexOf('.') > -1) {\n              aVal = this.resolveProperty(prop, a);\n              bVal = this.resolveProperty(prop, b);\n            }\n            else {            \n              aVal = a[prop];\n              bVal = b[prop];\n            }\n            \n            //Fix issues that spaces before/after string value can cause such as ' San Francisco'\n            if (this.isString(aVal)) aVal = aVal.trim().toUpperCase();\n            if (this.isString(bVal)) bVal = bVal.trim().toUpperCase();\n          \n            if(aVal === bVal){\n                return 0;\n            }\n            else if (aVal > bVal){\n                return this.direction * -1;\n            }\n            else {\n                return this.direction * 1;\n            }\n        });\n    }\n    \n    isString(val: any) : boolean {\n      return (val && (typeof val === 'string' || val instanceof String));\n    }\n\n    resolveProperty(path: string, obj: any) {\n      return path.split('.').reduce(function(prev, curr) {\n          return (prev ? prev[curr] : undefined)\n      }, obj || self)\n    }\n\n}","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ICustomer } from '../../shared/interfaces';\n\n@Component({\n    selector: 'app-customers-list',\n    templateUrl: './customers-list.component.html'\n})\nexport class CustomersListComponent implements OnInit {\n    private _customers: ICustomer[] = [];\n    @Input() get customers(): ICustomer[] {\n        return this._customers;\n    }\n    \n    set customers(value: ICustomer[]) {\n        if (value) {\n            this.filteredCustomers = this._customers = value;\n            this.calculateOrders();\n        }\n    }\n\n    filteredCustomers: any[] = [];\n    customersOrderTotal: number;\n    currencyCode: string = 'USD';\n    \n    constructor() {}\n    \n    ngOnInit() {\n\n    }\n    \n    calculateOrders() {\n        this.customersOrderTotal = 0;\n        this.filteredCustomers.forEach((cust: ICustomer) => {\n            this.customersOrderTotal += cust.orderTotal;\n        });\n    }\n    \n    filter(data: string) {\n        if (data) {\n            this.filteredCustomers = this.customers.filter((cust: ICustomer) => {\n                return cust.name.toLowerCase().indexOf(data.toLowerCase()) > -1 ||\n                       cust.city.toLowerCase().indexOf(data.toLowerCase()) > -1 ||\n                       cust.orderTotal.toString().indexOf(data) > -1;\n            });\n            \n        } else {\n            this.filteredCustomers = this.customers;\n        }\n        this.calculateOrders();\n    }\n    \n    sort(prop: string) {\n        // A sorter service will handle the sorting\n    }\n}","<filter-textbox (changed)=\"filter($event)\"></filter-textbox>\n<br />\n<br />\n<table class=\"table table-hover\">\n    <thead>\n        <tr>\n            <th (click)=\"sort('name')\">Name</th>\n            <th (click)=\"sort('city')\">City</th>\n            <th (click)=\"sort('orderTotal')\">Order Total</th>\n        </tr>\n    </thead>\n    <tr *ngFor=\"let cust of filteredCustomers\">\n        <td>\n            <a>\n                {{ cust.name | capitalize }}\n            </a>\n        </td>\n        <td>{{ cust.city }}</td>\n        <td>{{ cust.orderTotal | currency:currencyCode:'symbol' }}</td>\n    </tr>\n    <tr *ngIf=\"filteredCustomers && filteredCustomers.length\">\n        <td colspan=\"2\">&nbsp;</td>\n        <td>\n            {{ customersOrderTotal | currency:currencyCode:'symbol'  }}\n        </td>\n    </tr>\n    <tr *ngIf=\"!filteredCustomers || !filteredCustomers.length\">\n        <td colspan=\"4\">No customers found</td>\n    </tr>\n</table>\nNumber of Customers: {{ filteredCustomers.length }}\n<br />","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'filter-textbox',\n    template: `\n        Filter: <input type=\"text\" [(ngModel)]=\"filter\" />\n    `\n})\nexport class FilterTextboxComponent implements OnInit {\n    \n    private _filter: string;\n    @Input() get filter() {\n        return this._filter;\n    }\n    \n    set filter(val: string) { \n        this._filter = val;\n        this.changed.emit(this.filter); //Raise changed event\n    }\n\n    @Output() changed: EventEmitter<string> = new EventEmitter<string>();\n    \n    \n    constructor() {}\n    \n    ngOnInit() {\n        \n    }\n}","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../core/data.service';\nimport { ICustomer } from '../shared/interfaces';\n\n@Component({\n    selector: 'app-customers',\n    templateUrl: './customers.component.html'\n})\nexport class CustomersComponent implements OnInit {\n    title: string;\n    people: any[];\n    \n    constructor(private dataService: DataService) {}\n    \n    ngOnInit() {\n        this.title = 'Customers';\n        this.dataService.getCustomers()\n            .subscribe((customers: ICustomer[]) => this.people = customers);\n    //    this.people = [\n    //      { id: 1, name: 'john Doe', city: 'Phoenix', orderTotal: 9.99, customerSince: new Date(2014, 7, 10) },\n    //       { id: 2, name: 'Jane Doe', city: 'Chandler', orderTotal: 19.99, customerSince: new Date(2017, 2, 22)},\n    //       { id: 3, name: 'Michelle Thomas', city: 'Seattle', orderTotal: 99.99, customerSince: new Date(2002, 10, 31)},\n    //       { id: 4, name: 'Jim Thomas', city: 'New York', orderTotal: 599.99, customerSince: new Date(2002, 10, 31)},\n    //   ];\n    }\n}","<h1>{{ title }}</h1>\n<br />\n<app-customers-list [customers]=\"people\"></app-customers-list>\n","import { NgModule }      from '@angular/core';\nimport { FormsModule }      from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { CustomersComponent }  from './customers.component';\nimport { CustomersListComponent } from './customers-list/customers-list.component';\nimport { FilterTextboxComponent } from './customers-list/filter-textbox.component';\n\n@NgModule({\n  imports:      [ CommonModule, SharedModule, FormsModule ],\n  declarations: [ CustomersComponent, CustomersListComponent, FilterTextboxComponent ],\n  exports: [ CustomersComponent ]\n})\nexport class CustomersModule { }","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'capitalize' })\nexport class CapitalizePipe implements PipeTransform {\n    transform(value: any) {\n        if (value) {\n            return value.charAt(0).toUpperCase() + value.slice(1);\n        }\n        return value;\n    }\n}","import { NgModule } from '@angular/core';\n\nimport { CapitalizePipe } from './capitalize.pipe';\n\n@NgModule({\n    declarations: [ CapitalizePipe ],\n    exports: [ CapitalizePipe ]\n})\nexport class SharedModule { }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}